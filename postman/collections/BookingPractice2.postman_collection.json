{
	"info": {
		"_postman_id": "df432bf1-3477-4597-b15d-45ecb8e7afe7",
		"name": "Booking Practice2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Bookings",
			"item": [
				{
					"name": "All bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a945465-dee7-4dcf-a8b6-ae682068c049",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8e9b34c6-2ca6-4577-9780-f09fb16ff120",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "288fda25-269b-4cbc-a384-9aee0471d17b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "sdfgsdfgsdfg",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/1",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking by Checkin and Checkout dates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee9de27a-4679-4048-b175-7f7ad0a19e23",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{bookingBaseUrl}}/booking?checkin= \"2018-01-01\"",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": " \"2018-01-01\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "None existing booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13671ee3-48b9-4a38-b36f-6604ca7bcbdf",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/150000000",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"150000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking by Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cc71761-59f4-4355-afe6-7043ee99b02a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{bookingBaseUrl}}/booking?firstname=Mary",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "Mary"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking by  Incorrect Date Param",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "686320c9-3320-4f11-bc7e-99dd12b697dc",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{bookingBaseUrl}}/booking?checkout=asdfasdf",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "checkin",
									"value": "\"2019-01-01\"",
									"disabled": true
								},
								{
									"key": "checkout",
									"value": "asdfasdf"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Create Bookings",
			"item": [
				{
					"name": "Create a correct booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45abca9c-9b9c-4e2a-a805-47b5b1d5fcf8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Example\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 20,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-01\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with an invalid name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e9c524c-a369-4369-aa66-58b81e76a6c4",
								"exec": [
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : 1q2341234,\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-aaa\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with empty value in lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21199c4a-1c92-489d-9feb-d7c31b568ed3",
								"exec": [
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"someName\",\r\n    \"lastname\" : \" \",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-01\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with null value in lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d33de8b8-9d22-40cd-b9f9-105908ba7192",
								"exec": [
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"someName\",\r\n    \"lastname\" : null,\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-01\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with price as string",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cc2ae11-25de-4780-a63c-cfef33b78b57",
								"exec": [
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"someName\",\r\n    \"lastname\" : \"someLastName\",\r\n    \"totalprice\" : \"sadfasdf\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-03\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with invalid data type date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9524fb56-ce1b-42ec-badf-c7c2392b95dd",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"someName\",\r\n    \"lastname\" : \"someLastName\",\r\n    \"totalprice\" : 10000,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"asdfasdf\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with invalid date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e8d1dbb-5b2f-4745-8c95-331a0a248604",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"someName\",\r\n    \"lastname\" : \"someLastName\",\r\n    \"totalprice\" : 1000,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-30-30\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with invalid date not validated",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a42db46-9626-4aaf-a6a2-eaac48716233",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"someName\",\r\n    \"lastname\" : \"someLastName\",\r\n    \"totalprice\" : 1000,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking with xml body (headers)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72258305-9ff1-4079-b615-30769283da72",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\n    <firstname>Jim</firstname>\n    <lastname>Brown</lastname>\n    <totalprice>111</totalprice>\n    <depositpaid>true</depositpaid>\n    <bookingdates>\n      <checkin>2018-01-01</checkin>\n      <checkout>2019-01-01</checkout>\n    </bookingdates>\n    <additionalneeds>Breakfast</additionalneeds>\n  </booking>"
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a booking using Presets XML headers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d358913f-204e-4c9d-a889-4cf939f90e43",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>Jim</firstname>\r\n    <lastname>Brown</lastname>\r\n    <totalprice>111</totalprice>\r\n    <depositpaid>true</depositpaid>\r\n    <bookingdates>\r\n      <checkin>2018-01-01</checkin>\r\n      <checkout>2019-01-01</checkout>\r\n    </bookingdates>\r\n    <additionalneeds>Breakfast</additionalneeds>\r\n  </booking>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Create a booking by passing all the available parameters with valid values.\n\nHere you can change the Headers values from `Presets` header previously saved. In this case you should select the `XML Header` from the Presets dropdown. This will override the existent header with new values from the presets ones.\n\nNo Auth type selected."
					},
					"response": []
				},
				{
					"name": "Create a booking with xml body and response (headers)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a3e91ea-2b4d-4cf2-bb8e-7899b346141a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "text/xml"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<booking>\r\n    <firstname>Jim</firstname>\r\n    <lastname>Brown</lastname>\r\n    <totalprice>111</totalprice>\r\n    <depositpaid>true</depositpaid>\r\n    <bookingdates>\r\n      <checkin>2018-01-01</checkin>\r\n      <checkout>2019-01-01</checkout>\r\n    </bookingdates>\r\n    <additionalneeds>Breakfast</additionalneeds>\r\n</booking>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Create a booking by passing all the available parameters with valid values.\n\nHere you can change the Content-type value from the Headers section to send different types of content. In this case a XML.\n\n- Content-type headers tells the web service what format of data are we sending to ensure it uses the right parser.\n\nNo Auth type selected."
					},
					"response": []
				},
				{
					"name": "Create a booking with json body and response (headers)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dad3b6fa-432d-450e-b380-82b5c779f35e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml",
								"disabled": true
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\r\n    \"firstname\" : \"Gustavo\",\r\n    \"lastname\" : \"Viruega\",\r\n    \"totalprice\" : 100,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Create a booking by passing all the available parameters with valid values.\n\nHere you can change the Content-type value from the Headers section to send different types of content. In this case a JSON.\n\n- Content-type headers tells the web service what format of data we are sending to ensure it uses the right parser.\n\nNo Auth type selected."
					},
					"response": []
				},
				{
					"name": "Create a booking with incorrect body and response types (headers)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2a726e6-4713-428e-9050-99d69ca2cc15",
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml",
								"disabled": true
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/xml",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/zip",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/pdf",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\t{\r\n    \"firstname\" : \"Gustavo\",\r\n    \"lastname\" : \"Viruega\",\r\n    \"totalprice\" : 100,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Auth validations",
			"item": [
				{
					"name": "Not auth set in update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b1bd4bca-95be-400b-a2e5-ac46b857e984",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b9fb7e35-88ab-4533-848d-d0335f577c0c",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Example update\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 20,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-01\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/1",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Not auth set in delete",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "278083a5-7f7b-44c6-98d8-9171fcc000bf",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "341442b0-cf7c-43bd-8c75-c0ca508b6bf3",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=abc123"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/1",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Token incorrect password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df63c366-b042-4ca2-9a8b-15765f2841f7",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"aaaa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/auth",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Token incorrect username",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6eb08795-508b-49cd-b207-0e4ccf0b3c7b",
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"tester\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/auth",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Token incorrect content-type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d27eeed9-7f87-4ae2-b2ab-a777db63cb69",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "Cookie",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}\n ",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/auth",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update basic auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bd140e40-9933-49d6-9027-a42e4b0acee2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c5bfd79b-9ad9-4572-ac96-6765a68b2fd6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Example update\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 20,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-01\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/1",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3be67630-3a19-427f-b3f3-70fba96f46ad",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/auth",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a booking with basic auth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "32bea378-81ce-4269-86d7-7aa6fd3a653a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "adaf8ae4-ab5b-4966-b0a1-75d13df2c339",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/5",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a booking using token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a13dee7c-e520-468a-bd15-b835a53715af",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9b2a9da4-d7ca-4ee7-8136-44700ffc5145",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token=0eb9dcbe9e9c9ff"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/3",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ex5 example",
			"item": [
				{
					"name": "Create booking using data from a csv file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c9e68c3-ae07-4b45-97d6-429a88cbd371",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"{{firstname}}\",\r\n    \"lastname\" : \"{{lastname}}\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-01\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update 3 bookings from file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1c4a7168-6cba-46c9-9484-90916d4c64b1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7fe5dfed-2ab5-4ef6-a7ef-cd23b9b944b8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"{{firstname}}\",\r\n    \"lastname\" : \"{{lastname}}\",\r\n    \"totalprice\" : 20,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2019-01-01\",\r\n        \"checkout\" : \"2019-01-03\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
						},
						"url": {
							"raw": "{{bookingBaseUrl}}/booking/{{id}}",
							"host": [
								"{{bookingBaseUrl}}"
							],
							"path": [
								"booking",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "33a956af-736b-4133-86de-c4010cfbb521",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8c104e7f-a1f0-4b90-bd29-e080da30379d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "password123",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "49574aa9-5f2a-4292-8cd7-84e79108caea",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "13e0de82-8b30-4738-9b3b-4269ef953f92",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}